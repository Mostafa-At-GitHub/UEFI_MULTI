<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">
<html>

<head>
<link type="text/css" rel="stylesheet" href="style1.css" media="screen" />
<link type="text/css" rel="stylesheet" href="printstyle1.css" media="print" /> 
<title>Grub4dos Guide - PXE Booting</title>
</head>

<body>
<h1>Grub4dos Guide - PXE Booting</h1>
<hr />




<p>
The Grub4dos file <font class="file">grldr</font> can be used as a <b><u>P</u></b>reboot e<b><u>X</u></b>ecution <b><u>E</u></b>nvironment (PXE) boot file. Alternatively, <font class="file">GRUB.EXE</font> can be loaded from another PXE boot loader - e.g. from <font class="file">pxelinux.0</font>.
</p>




</p>
This section has been added at the request of boot-land forum member <a target="_blank" href="http://www.boot-land.net/forums/index.php?showuser=11910">Climbing</a> and is based upon instructions he posted <a target="_blank" href="http://www.boot-land.net/forums/index.php?s=&showtopic=5187&view=findpost&p=50024">here</a>
<p>




<p>
The following information has been taken from the <font class="file"><a target="_blank" href="README_GRUB4DOS.txt">README_GRUB4DOS.txt</a></font> file included with the Grub4dos build 2009-02-05 download -
</p>


<a name="readme"></a><br>
<div><textarea cols="80" rows="10" align=left readonly>

******************************************************************************
***                          PXE device                                    ***
******************************************************************************

If PXE service is found at startup, GRUB4DOS will create a virtual device
(pd), through which files from the tftp server can be accessed. You can setup
a diskless boot environment using the following steps:

Client side

You need to boot from PXE ROM.

Server side

You need to configure a dhcp server and a tftp server. In the dhcp server, use
grldr as boot file.

You may also want to load a different menu.lst for different client. GRUB4DOS
will scan the following location for configuration file:

	[/mybootdir]/menu.lst/01-88-99-AA-BB-CC-DD
	[/mybootdir]/menu.lst/C000025B
	[/mybootdir]/menu.lst/C000025
	[/mybootdir]/menu.lst/C00002
	[/mybootdir]/menu.lst/C0000
	[/mybootdir]/menu.lst/C000
	[/mybootdir]/menu.lst/C00
	[/mybootdir]/menu.lst/C0
	[/mybootdir]/menu.lst/C
	[/mybootdir]/menu.lst/default

Here, we assume the network card mac for the client machine is
88:99:AA:BB:CC:DD, and the ip address is 192.0.2.91 (C000025B). /mybootdir is
the directory of the boot file, for example, if boot file is /tftp/grldr, then
mybootdir=tftp.

If none of the above files is present, grldr will use its embeded menu.lst.

This is a menu.lst to illstrate how to use files from the tftp server.

	title Create ramdisk using map
	map --mem (pd)/floppy.img (fd0)
	map --hook
	rootnoverify (fd0)
	chainloader (fd0)+1

	title Create ramdisk using memdisk
	kernel (pd)/memdisk
	initrd (pd)/floppy.img

You can see that the menu.lst is very similar to normal disk boot, you just
need to replace device like (hd0,0) with (pd).

There are some differences between disk device and pxe device:

1. You can't list files in the pxe device.

2. The blocklist command will not work with a file in the pxe device.

3. You must use --mem option if you want to map a file in the pxe device.

When you use chainloader to load file from the pxe device, there is a option
you can use:

	chainloader --raw (pd)/BOOT_FILE

Option --raw works just like --force, but it load file in one go. This can
improve performance in some situation.

You can use the pxe command to control the pxe device.

1. pxe

	If used without any parameter, pxe command will display current
	settings.

2. pxe blksize N

	Set the packet size for tftp transmission. Minimum value is 512,
	maximum value is 1432. This parameter is used primarily for very old
	tftp server where packet larger than 512 byte is not supported.

3. pxe basedir /dir

	Set the base directory for files in the tftp server. If

		pxe basedir /tftp

	then all files in the pxe device is related to directory /tftp, for
	example, (pd)/aa.img correspond to /tftp/aa.img in the server.

	The default value of base directory is the directory of the boot file,
	for example, if boot file is /tftp/grldr, then default base directory
	is /tftp.

4. pxe keep

	Keep the PXE stack. The default behaviour of GRUB4DOS is to unload
	the PXE stack just before it exits.

5. pxe unload

	Unload the PXE stack immediately.


******************************************************************************
***                       GRLDR as PXE boot file                           ***
******************************************************************************

GRLDR can be used as the PXE boot file on a remote/network server. The (pd)
device is used to access files on the server. When GRLDR is booted through
network, it will use its preset menu as the config file. However, you may use
a "pxe detect" command, which acts the same way as PXELINUX:

    * First, it will search for the config file using the hardware type (using
      its ARP type code) and address, all in hexadecimal with dash separators;
      for example, for an Ethernet (ARP type 1) with address 88:99:AA:BB:CC:DD
      it would search for the filename 01-88-99-AA-BB-CC-DD. 

    * Next, it will search for the config file using its own IP address in
      upper case hexadecimal, e.g. 192.0.2.91 -> C000025B. If that file is not
      found, it will remove one hex digit and try again. At last, it will try
      looking for a file named default (in lower case). As an example, if the
      boot file name is /mybootdir/grldr, the Ethernet MAC address is
      88:99:AA:BB:CC:DD and the IP address 192.0.2.91, it will try following
      files (in that order): 

       /mybootdir/menu.lst/01-88-99-AA-BB-CC-DD
       /mybootdir/menu.lst/C000025B
       /mybootdir/menu.lst/C000025
       /mybootdir/menu.lst/C00002
       /mybootdir/menu.lst/C0000
       /mybootdir/menu.lst/C000
       /mybootdir/menu.lst/C00
       /mybootdir/menu.lst/C0
       /mybootdir/menu.lst/C
       /mybootdir/menu.lst/default

You cannot directly map an image file on (pd). You must map it in memory using
the --mem option. For example,

	map --mem (pd)/images/floppy.img (fd0)
	map --hook
	chainloader (fd0)+1
	rootnoverify (fd0)
	boot

One more example,

	map --mem (pd)/images/cdimage.iso (0xff)
	map --hook
	chainloader (0xff)
	boot




******************************************************************************
***                    Use 'pxe detect' in preset-menu                     ***
******************************************************************************

Now the "pxe" command has a new subcommand "detect":

		pxe detect [BLOCK_SIZE] [MENU_FILE]

BLOCK_SIZE specifies the block size for PXE. If it is not specified or it is
0, then grub4dos will go through a probing process and get a proper value
for data transfer.

MENU_FILE specifies the config file on the PXE server. If omitted, a standard
config file in the menu.lst sub-dir will gain control. For a description on
the config files in the menu.lst sub-dir, please refer to the section
"GRLDR as PXE boot file" above.
If MENU_FILE starts in a "/", then the MENU_FILE on the PXE server will gain
control, else(if MENU_FILE does not start in a "/") no menu will be executed.

Normally you want to use a "pxe blksize ..." or a "pxe detect ..." command
before you access the (pd) device, since the default blocksize of 512 might
not work on your system.

</textarea></div>








<div id=bullet>
The following walkthrough will create a PXE Server using Windows XP and <a target="_blank" href="http://tftpd32.jounin.net">tftpd32</a> (opensource TFTP server) on the host PC. Apologies to Linux users for the (continuing) bias towards Windows. 
	<ul>
	<li>Download tftpd32 from <a target="_blank" href="http://tftpd32.jounin.net/tftpd32_download.html">here</a> (tested with Version 3.29) and unzip the contents to <font class="file">C:\tftpd32\</font>.</li> <br />
 
	<li>Create folder <font class="file">C:\tftpd32\root\</font> - this will be the root folder containing PXE boot file(s) and any disk images or files you want to access from the client PC.</li> <br />

	<li>Copy <font class="file">grldr</font> to <font class="file">C:\tftpd32\root\</font>.</li> <br />

	<li>Create <u>folder</u> <font class="file">C:\tftpd32\root\menu.lst\</font> - the Grub4dos configuration file will be placed in this directory</li> <br />

	<li>Open <font class="file">C:\tftpd32\tftpd32.exe</font>. Select the <b>Settings</b> button (bottom middle of Tftpd32 window) and copy the settings from figure 1. (below) - </li> <br />
		<ul>
		<li>Ensuring that the <b>Base Directory</b> is set to the root folder we created earlier (<font class="file">C:\tftpd32\root</font>). </li>
		<li>Note - IP Address: 192.168.1.4 (in <b>DHCP Options</b> and <b>Advanced TFTP Options</b>) refers to my IP address. You can bind DHCP and TFTP to your own IP address or just leave these options unchecked. </li>
		<li>Ensure that <b>Allow '\' As virtual root</b> is enabled - this will allow file/folder paths to treat <font class="file">C:\tftpd32\root\</font> as the root of the drive (e.g. entering <font class="command">chainloader /pxelinux.0</font> from the Grub4dos command line will chainload <font class="file">C:\tftpd32\root\pxelinux.0</font>.</li>
		</ul>
			<div id=img>
			figure 1.<br />
			<IMG SRC="img/pxe1.jpg">
			</div><br />

	<li>Select <b>OK</b> to save settings. You will be prompted to restart Tftpd32, close the program and restart it.</li> <br />

	<li>Select the <b>DHCP server</b> tab and copy the settings from figure 2. (below) - changing the <b>IP pool starting address</b> and <b>Size of pool</b> if required. </li> <br />
		<div id=img>
		figure 2.<br />
		<IMG SRC="img/pxe2.jpg">
		</div><br />


	<li>The <b>IP pool starting address</b> will be the IP address allocated to the first PC connecting to the PXE server. The <b>Size of pool</b> will limit the maximum number of client PC's. For a full explanation of Tftpd32 settings, refer to <font class="file">C:\tftpd32\tftpd32.chm</font></li> <br />

	<li>Copy any disk images or files you want to boot via PXE to <font class="file">C:\tftpd32\root\</font> - in the following example we will boot <font class="file">C:\tftpd32\root\dos.img</font> (an MSDOS based floppy disk image)</li> <br />

	<li>Test your setup by booting the client PC via PXE. As we have not yet created a configuration file you will enter the Grub4dos Command Line Interface.</li> <br />

	<li>The root device will be detected as (pd), and should be the <b>Base directory</b> as configured by tftpd32 - in our case <font class="file">C:\tftpd32\root\</font></li> <br />

	<li>Entering the <font class="command">root</font> command, followed by <b>[ENTER]</b> will result in the following output (note - device (fd33) is equivalent to (pd)) - 
		<div id=box2>
		grub> root <br />
		<br />
		(fd33): Filesystem type is pxe, using whole disk <br />
		</div>
			</li> <br />

	<li>To load <font class="file">dos.img</font>, we will enter the commands - <br />
		<ul>
		<li><font class="command">map --mem (pd)/dos.img (fd0)</font> <b>[ENTER]</b> </li>
		<li><font class="command">map --hook</font> <b>[ENTER]</b> </li>
		<li><font class="command">root (fd0)</font> <b>[ENTER]</b> </li>
		<li><font class="command">chainloader+1</font> <b>[ENTER]</b> </li>
		<li><font class="command">boot</font> <b>[ENTER]</b> </li>
		</ul>

		<p>
		This results in the following output - <br />
		</p>

		<div id=box2>
		grub> map --mem (pd)/dos.img (fd0) <br />
		FAT12 BPB found with 0xEB (jmp) leading the boot sector.<br />
		<br />
		probed C/H/S =80/2/18, probed total sectors = 2880<br />
		. <br />
		<br />
		grub> map --hook<br />
		<br />
		grub> root (fd0)<br />
		&emsp;Filesystem type is fat, using whole disk<br />
		<br />
		grub> chainloader +1<br />
		<br />
		grub> boot_
		</div></li> <br />
	
	<li>Note from <font class="file"><a target="_blank" href="README_GRUB4DOS.txt">README_GRUB4DOS.txt</a></font> - "You cannot directly map an image file on (pd). You must map it in memory using
the --mem option." </li> <br />

	<li>Other warnings from <font class="file"><a target="_blank" href="README_GRUB4DOS.txt">README_GRUB4DOS.txt</a></font> include - 
		<ul>
			<li>"You can't list files in the pxe device"</li>
			<li>"The blocklist command will not work with a file in the pxe device"</li>
		</ul><br />

	<li>Now that we have a series of working commands, we can add them to a configuration file - e.g. 
		<div id=box>
		title Load DOS.img<br />
		map --mem (pd)/dos.img (fd0)<br />
		map --hook<br />
		root (fd0)<br />
		chainloader +1
		</div></li> <br />

	<li>Open notepad and create your configuration file, then save as <font class="file">C:\tftpd32\root\menu.lst\default</font>. NOTE - you must save this file without a file extension (<font class="file">default</font>, not <font class="file">default.txt</font>). Grub4dos will automatically load this file from all client PC's. It is possible to create individual configuration files for different client PC's by using a configuration file based on either the MAC address or IP address of the client PC (to convert your IP address to the hexadecimal format used by Grub4dos, see <a target="_blank" href="http://www.kloth.net/services/iplocate.php">here</a>) - refer to the extract from <font class="file"><a target="_blank" href="README_GRUB4DOS.txt">README_GRUB4DOS.txt</a></font> at the start of this section (<a href="#readme">here</a>).</li> <br />

	</ul>
</div>



<p>
Some example configuration file entries include - 
</p>
	<ul>

		<li>Chainload BartPE (RAM loading image using Windows Server 2003 SP1 files <font class="file">ramdisk.sys</font>, <font class="file">setupldr.exe</font> (renamed as <font class="file">ntldr</font>) and <font class="file">startrom.n12</font> (renamed as <font class="file">startrom.0</font>)).
		<div id=box>
		title BartPE <br />
		pxe keep <br />
		chainloader --raw (pd)/startrom.0 <br />
		</div>
		</li> <br />


		<li>Chainload Windows PE 2.1.
		<div id=box>
		title WinPE 2.1 <br />
		pxe keep <br />
		chainloader --raw (pd)/Boot/pxeboot.0 <br />
		</div>
		</li> <br />


		<li>Boot from MSDOS .iso file (see <a href="map.htm#hd32">here</a>).
		<div id=box>
		title DOS (.iso file) <br />
		map --mem (pd)/ISO/dos.iso (0xFF)  <br />
		map --hook  <br />
		root (0xFF) <br />
		chainloader (0xFF) <br />
		</div>
		</li> <br />


		<li>Chainload pxelinux boot loader.
		<div id=box>
		title PXELinux <br />
		pxe keep <br />
		chainloader --raw (pd)/pxelinux.0 <br />
		</div>
		</li> <br />


		<li>Load/return to Grub4dos from pxelinux (this entry should be added to the pxelinux configuration file <font class="file">\pxelinux.cfg\default</font>).
		<div id=box>
		LABEL grub4dos.pxe <br />
		MENU LABEL GRUB4DOS with PXE <br />
		kernel /grub.exe <br />
		append keeppxe <br />
		</div>
		</li> <br />

	</ul>




<br />
<div id="footer">
<font class="footer"><a href="boot.htm">&nbsp;PREV&nbsp;</a></font><font class="footer"><a href="../Grub4dos.htm">&nbsp;HOME&nbsp;</a></font><font class="footer"><a href="map.htm">&nbsp;NEXT&nbsp;</a></font>		
</div>





</body>
</html>

