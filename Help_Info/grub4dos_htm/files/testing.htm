<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
   "http://www.w3.org/TR/html4/strict.dtd">
<html>

<head>
<link type="text/css" rel="stylesheet" href="style1.css" media="screen" />
<link type="text/css" rel="stylesheet" href="printstyle1.css" media="print" /> 
<title>Grub4dos Guide - Experimenting with Grub4dos</title>
</head>

<body>
<h1>Grub4dos Guide - Experimenting with Grub4dos</h1>
<hr />

<p>
To test installing and using Grub4dos without risking any damage to your current operating system, use a Virtual Machine. With the widespread availability of hardware virtualising software, it's a relatively straightforward process to create a hard disk image for testing. 
</p>

<p>
For those comfortable with command line tools, <a target="_blank" href="http://bellard.org/qemu/">QEMU</a> is a freeware machine emulator ported to Windows. QEMU does not need to be installed and can be used as a portable application - simply unzip the contents of the download to a location of your choice and run from a command prompt. Alternatively use the GUI version - <a target="_blank" href="http://www.davereyn.co.uk/">QEMU Manager</a>. 
</p>

<p>
Alternatives to QEMU include - 
	<ul>
	<li><a target="_blank" href="http://www.virtualbox.org/">Virtual Box</a></li>
	<li><a target="_blank" href="http://www.microsoft.com/windows/products/winfamily/virtualpc/default.mspx">Microsoft Virtual PC</a></li>
	<li><a target="_blank" href="http://www.vmware.com/products/ws/">VMWare Workstation</a></li>
	</ul>
</p>

<p>
If enough free hard disk space is available, large image files can be used and the disk image can be partitioned and set up for multibooting.
</p>

<hr />















<h1><u>QEMU Walkthrough - Installing Windows XP</u></h1>

<div id=bullets>
<b>NOTES</b>
	<ul>
	<li>The following was tested with QEMU version 0.9.0. File/folder paths in this version of QEMU are separated with a forward slash <b>/</b> (not a backslash <b>\</b> as used in windows based systems).</li>
	<li>If you do not have a Windows XP installation disc, the following walkthrough can be adapted to install DOS/MSDOS; Linux; and Windows 9x/NT/2000/XP (Windows Vista is <u>not</u> compatible with QEMU).</li>
	<li>The walkthrough only covers basic QEMU usage - a variety of other features are available, including networking with the host operating system, and other virtual machines.</li>
	</ul>
</div>










<h2>Creating a Disk Image</h2>

<p>
<font class="file">qemu-img.exe</font> help output (from command <font class="command">qemu-img.exe -h</font>)<br />
<textarea cols="80" rows="10" align=left readonly>
qemu-img version 0.9.0, Copyright (c) 2004-2007 Fabrice Bellard
usage: qemu-img command [command options]
QEMU disk image utility

Command syntax:
  create [-e] [-b base_image] [-f fmt] filename [size]
  commit [-f fmt] filename
  convert [-c] [-e] [-f fmt] filename [-O output_fmt] output_filename
  info [-f fmt] filename

Command parameters:
  'filename' is a disk image filename
  'base_image' is the read-only disk image which is used as base for a copy on
    write image; the copy on write image only stores the modified data
  'fmt' is the disk image format. It is guessed automatically in most cases
  'size' is the disk image size in kilobytes. Optional suffixes 'M' (megabyte)
    and 'G' (gigabyte) are supported
  'output_filename' is the destination disk image filename
  'output_fmt' is the destination format
  '-c' indicates that target image must be compressed (qcow format only)
  '-e' indicates that the target image must be encrypted (qcow format only)

Supported format: qcow2 vvfat vpc bochs dmg cloop vmdk qcow host_device raw

</textarea>
</p>




<div id=bullet>
To create a raw disk image, open a command prompt in the same directory as QEMU and use the following syntax <font class="command">qemu-img.exe create [filename] [size]</font>.
	<ul>
	<li>Where <font class="command">[filename]</font> is the disk image (with path) to create - e.g. <font class="command">C:/test.ima</font>. Relative paths can also be used - e.g. <font class="command">test.ima</font> will create the image file <font class="file">test.ima</font> in the same directory as QEMU, <font class="command">/Images/test.ima</font> will create the image file <font class="file">test.ima</font> in the QEMU subdirectory <font class="file">Images</font>. </li>
	<li>Where <font class="command">[size]</font> is the disk image size in kilobytes. Optional suffixes 'M' (megabyte) and 'G' (gigabyte) are supported - e.g. <font class="command">1024M</font> would create an image file 1024 MB in size. </li>
</div>






<p>
To create a 3GB image file (<font class="file">XP.ima</font>) at the root of the C: drive - enter the command<br />
<font class="command">qemu-img.exe create C:/XP.ima 3G</font>
</p>










<h2>Installing the Guest Operating System</h2>

<p>
<font class="file">qemu.exe</font> help output (from command <font class="command">qemu.exe -h</font>).<br />
<textarea cols="80" rows="10" align=left readonly>
QEMU PC emulator version 0.9.0, Copyright (c) 2003-2007 Fabrice Bellard
usage: qemu [options] [disk_image]

'disk_image' is a raw hard image image for IDE hard disk 0

Standard options:
-M machine      select emulated machine (-M ? for list)
-fda/-fdb file  use 'file' as floppy disk 0/1 image
-hda/-hdb file  use 'file' as IDE hard disk 0/1 image
-hdc/-hdd file  use 'file' as IDE hard disk 2/3 image
-cdrom file     use 'file' as IDE cdrom image (cdrom is ide1 master)
-boot [a|c|d|n] boot on floppy (a), hard disk (c), CD-ROM (d), or network (n)
-snapshot       write to temporary files instead of disk image files
-no-quit        disable SDL window close capability
-no-fd-bootchk  disable boot signature checking for floppy disks
-m megs         set virtual RAM size to megs MB [default=128]
-smp n          set the number of CPUs to 'n' [default=1]
-nographic      disable graphical output and redirect serial I/Os to console
-audio-help     print list of audio drivers and their options
-soundhw c1,... enable audio support
                and only specified sound cards (comma separated list)
                use -soundhw ? to get the list of supported cards
                use -soundhw all to enable all of them
-localtime      set the real time clock to local time [default=utc]
-full-screen    start in full screen
-win2k-hack     use it when installing Windows 2000 to avoid a disk full bug
-usb            enable the USB driver (will be the default soon)
-usbdevice name add the host or guest USB device 'name'

Network options:
-net nic[,vlan=n][,macaddr=addr][,model=type]
                create a new Network Interface Card and connect it to VLAN 'n'
-net user[,vlan=n][,hostname=host]
                connect the user mode network stack to VLAN 'n' and send
                hostname 'host' to DHCP clients
-net tap[,vlan=n],ifname=name
                connect the host TAP network interface to VLAN 'n'
-net socket[,vlan=n][,fd=h][,listen=[host]:port][,connect=host:port]
                connect the vlan 'n' to another VLAN using a socket connection
-net socket[,vlan=n][,fd=h][,mcast=maddr:port]
                connect the vlan 'n' to multicast maddr and port
-net none       use it alone to have zero network devices; if no -net option
                is provided, the default is '-net nic -net user'

-tftp prefix    allow tftp access to files starting with prefix [-net user]
-redir [tcp|udp]:host-port:[guest-host]:guest-port
                redirect TCP or UDP connections from host to guest [-net user]

Linux boot specific:
-kernel bzImage use 'bzImage' as kernel image
-append cmdline use 'cmdline' as kernel command line
-initrd file    use 'file' as initial ram disk

Debug/Expert options:
-monitor dev    redirect the monitor to char device 'dev'
-serial dev     redirect the serial port to char device 'dev'
-parallel dev   redirect the parallel port to char device 'dev'
-pidfile file   Write PID to 'file'
-S              freeze CPU at startup (use 'c' to start execution)
-s              wait gdb connection to port 1234
-p port         change gdb connection port
-d item1,...    output log to /tmp/qemu.log (use -d ? for a list of log items)
-hdachs c,h,s[,t]  force hard disk 0 physical geometry and the optional BIOS
                translation (t=none or lba) (usually qemu can guess them)
-L path         set the directory for the BIOS, VGA BIOS and keymaps
-kernel-kqemu   enable KQEMU full virtualization (default is user mode only)
-no-kqemu       disable KQEMU kernel module usage
-std-vga        simulate a standard VGA card with VESA Bochs Extensions
                (default is CL-GD5446 PCI VGA)
-no-acpi        disable ACPI
-no-reboot      exit instead of rebooting
-loadvm file    start right away with a saved state (loadvm in monitor)
-vnc display    start a VNC server on display
-option-rom rom load a file, rom, into the option ROM space

During emulation, the following keys are useful:
ctrl-alt-f      toggle full screen
ctrl-alt-n      switch to virtual console 'n'
ctrl-alt        toggle mouse and keyboard grab

When using -nographic, press 'ctrl-a h' to get some help.

</textarea>
</p>









<div id=bullet>
Assuming your CD drive is mounted as "D:", insert the Windows Installation CD into your drive and use the following command to boot from it (change D: to reflect your own CD drive letter if required) - <br />
<font class="command">qemu.exe -L . -m 256 -boot d -cdrom D: -hda C:\XP.ima</font>.
	<ul>
	<li>Where <font class="command">-L</font> sets the path to the bios and keymap files (in this case <font class="command">-L . </font> sets the path as the directory from which qemu is being run.</li>
	<li>Where <font class="command">-m 256</font> sets the emulated machines virtual memory as 256MB.</li>
	<li>Where <font class="command">-boot d</font> sets the CD as the boot device (<font class="command">-boot a</font> = floppy device; <font class="command">-boot c</font> = hard disk).</li>
	<li>Where <font class="command">-cdrom D:</font> sets the cdrom device as the physical device D: (can also use cd image files - e.g. <font class="command">-cdrom C:\XP.iso</font>.</li>
	<li>Where <font class="command">-hda C:\XP.ima</font> mounts the disk image file <font class="file">C:\XP.ima</font>.</li>
	</ul>
</div>




<p>
QEMU should boot from the install CD. The disk image can be partitioned and formatted during the XP installation - QEMU is slow in comparison to some of the other software listed above, so the install may take some time.  
</p>



<p>
Once the operating system has been installed, the Guest OS can be started using the following command - <br />
<font class="command">qemu.exe -L . -m 256 -boot c -hda C:\XP.ima</font>.
</p>




<h2>Sharing Files With The Guest Operating System</h2>

<p>
Once the guest operating system has been installed, we will need to find a way to share files with it. There are a number of methods for doing so, some are easier to set up than others.
	<ul>
	<li><a href="#method1">Mount a CD (or CD Image)</a></li>
	<li><a href="#method2">Mount The Guest OS Disk Image</a></li>
	<li><a href="#method3">Mount a Physical Hard Disk</a></li>
	</ul>
It is also possible to create a network share on the Host OS, and connect to it from the Guest OS, however this is beyond the scope of this guide.
</p>
















<a name="method1"></a><br>
<h3>Mount a CD (or CD Image)</h3>

<p>
Mounting a physical CD drive was covered earlier - simply use the syntax <font class="command">-cdrom [drive:]</font> (where <font class="command">[drive:]</font> is letter allocated to the device).
</p>

<div id=bullet>
Alternatively, create a CD image file (.iso) and mount it using the syntax <font class="command">-cdrom [file]</font> (where <font class="command">[file]</font> is the image filename with path - remember to use a forward slash <b>/</b> for the path). To create an .iso image, download the command line tool mkisofs from <a target="_blank" href="http://fy.chalmers.se/~appro/linux/DVD+RW/tools/win32/">here</a>. The following is a simple method of using mkisofs - 
	<ul>
	<li>Create folder <font class="file">C:\mkisofs</font> and copy <font class="file">mkisofs.exe</font> to it.</li>
	<li>Create folder <font class="file">C:\mkisofs\root</font>.</li>
	<li>Copy any files you want to include in the .iso image to <font class="file">C:\mkisofs\root</font>.</li>
	<li>Open a command prompt in the <font class="file">mkisofs</font> folder, and enter the command - <br />
<font class="command">mkisofs.exe -R -o C:\xp.iso root</font> <br />
where <font class="command">C:\xp.iso</font> is the name (and path) of the image to create, and <font class="command">root</font> is the root directory of the CD.</li>
	</ul>
</div>


<p>
Now use the command <font class="command">qemu.exe -L . -m 256 -boot c -hda C:\XP.ima -cdrom C:\xp.iso</font> when starting the Guest OS, and all files will be available on the Guest OS CD-ROM drive.
</p>







<a name="method2"></a><br>
<h3>Mount The Guest OS Disk Image</h3>

<p>
It is possible to mount a disk image on the Host operating system using various tools. To use ImDisk (freeware tool available 
<a target="_blank" href="http://www.ltr-data.se/opencode.html#ImDisk">here</a>), download and install the ImDisk package. Now right click on the image file you want to mount (e.g. <font class="file">C:\XP.ima</font>) and choose option <font class="command">Mount as ImDisk Virtual Disk</font> - this will open a "Mount new virtual disk" window. 
</p>

<p>
As we are mounting a hard disk type image with MBR, we will need to use a file offset. Enter 63 and check <b>Blocks</b> option to mount the first partition on the hard disk image created earlier. You will need to calculate the offset for any other partitions within the image manually. Please note - different disk image formats such as .vmdk might use a different offset value for the first partition. 
</p>

<p>
Select a drive letter (this will be the mount point for the disk image) - the default will be the first available drive. All other options can be left at their default values. When you have finished, click on <b>OK</b>. Open Explorer, the disk should now be mounted as the drive letter selected earlier. If, after installing the operating system, you are prompted to format the disk when accessing it in explorer on the Host OS, then you have used an incorrect offset value for ImDisk. 
</p>









<a name="method3"></a><br>
<h3>Mount a Physical Hard Disk</h3>

<p>
Following is from section 3.6.5.2 of <b>qemu-doc.html</b> -
<div id="quote">
"Hard disks can be used with the syntax: `\\.\PhysicalDriveN' where N is the drive number (0 is the first hard disk).<br />
<br />
WARNING: unless you know what you do, it is better to only make READ-ONLY accesses to the hard disk otherwise you may corrupt your host data (use the `-snapshot' command line so that the modifications are written in a temporary file)." 
</div>
</p>

<p>
To use the first hard disk (physical disk (hd0) in grub4dos terms), use command <br />
<font class="command">qemu.exe -L . -m 256 -boot c -hda C:\XP.ima -hdb \\.\PhysicalDrive0</font> when starting the Guest OS. Please note that backslashes (e.g. <font class="command">\\.\PhysicalDrive0</font>) were used in testing, as recommended in <b>qemu-doc.html</b>. Other sources suggest that forward slashes should be used - e.g. <font class="command">//./PhysicalDrive0</font>. It is not possible to mount individual partitions - only the whole of a hard disk. 
</p>

<p>
During testing a USB flash drive was mounted using the command <font class="command">qemu.exe -L . -m 256 -boot c -hda C:\XP.ima -hdb \\.\PhysicalDrive1</font>. The drive was mounted as a local disk on the Guest OS. Files copied to the drive from the Guest OS were not displayed in Explorer on the Host system until the disk was removed and remounted. 
</p>







<br />
<div id="footer">
<font class="footer"><a href="commands.htm">&nbsp;PREV&nbsp;</a></font><font class="footer"><a href="../Grub4dos.htm">&nbsp;HOME&nbsp;</a></font><font class="footer"><a href="links.htm">&nbsp;NEXT&nbsp;</a></font>		
</div>





</body>
</html>

